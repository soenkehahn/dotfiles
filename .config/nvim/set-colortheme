#!/usr/bin/env -S rust-script --toolchain-version stable --
//! ```cargo
//! [dependencies]
//! cradle = "=0.2.1"
//! dirs = "=3.0.2"
//! ```

use cradle::*;
use std::fs;

fn main() {
    let dir = dirs::home_dir().unwrap().join(".config/nvim");
    let colorscheme = std::env::args().skip(1).next().unwrap();
    fs::create_dir_all(dir.join("lua")).unwrap();
    fs::write(
        dir.join("lua/colors.lua"),
        format!("vim.cmd(\"colorscheme base16-{}\")\n", colorscheme),
    )
    .unwrap();
    source_colors();
}

fn source_colors() {
    let sockets = fs::read_dir("/tmp")
        .unwrap()
        .filter(|entry| {
            entry
                .as_ref()
                .unwrap()
                .file_name()
                .clone()
                .to_str()
                .unwrap()
                .starts_with("nvim")
        })
        .map(|entry| {
            let path = entry.unwrap().path();
            if path.is_dir() {
                path.join("0")
            } else {
                path
            }
        });
    sockets.for_each(|socket| {
        let Status(_) = (
            LogCommand,
            "nvr",
            "--nostart",
            "--servername",
            socket,
            "--remote-send",
            ":source ~/.config/nvim/lua/colors.lua<CR>",
        )
            .run_output();
    });
}
