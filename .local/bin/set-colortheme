#!/usr/bin/env -S rust-script --toolchain-version stable --
//! ```cargo
//! [dependencies]
//! cradle = "=0.2.2"
//! dirs = "=3.0.2"
//! ```

use cradle::prelude::*;
use std::thread;

fn main() {
    let colortheme = std::env::args().skip(1).next().unwrap();
    let apps = &[
        "alacritty",
        "Code",
        "i3status",
        "mako",
        "nvim",
        "rofi",
        "swaylock",
    ];
    let mut threads = Vec::new();
    for app in apps {
        let colortheme_clone = colortheme.clone();
        threads.push(thread::spawn(move || {
            set_colortheme_for_config(&colortheme_clone, app)
        }));
    }
    for thread in threads {
        thread.join().unwrap();
    }
    set_colortheme_for_config(&colortheme, "sway");
    ("notify-send", format!("colortheme: {colortheme}")).run();
}

fn set_colortheme_for_config(colortheme: &str, app: &str) {
    (
        LogCommand,
        CurrentDir(dirs::home_dir().unwrap()),
        format!("./.config/{}/set-colortheme", app),
        colortheme,
    )
        .run();
}
