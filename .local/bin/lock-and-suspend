#!/usr/bin/env -S rust-script --toolchain-version stable --
//! ```cargo
//! [dependencies]
//! anyhow = "1.0.50"
//! structopt = "=0.3.25"
//! ```

use anyhow::Result;
use std::process::Command;
use std::thread;
use std::time::Duration;
use structopt::StructOpt;

#[derive(StructOpt)]
struct Args {}

fn main() -> Result<()> {
    let _ = Args::from_args();
    let mut lock_command = Command::new("swaylock").spawn()?;
    thread::sleep(Duration::from_millis(200));
    let mut suspend_command = Command::new("sudo").arg("pm-suspend").spawn()?;
    lock_command.wait()?;
    suspend_command.wait()?;
    Ok(())
}
