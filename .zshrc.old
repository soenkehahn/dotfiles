zstyle ':completion:*' completer _complete
zstyle ':completion:*' completions unset
zstyle ':completion:*' file-sort name
zstyle ':completion:*' glob unset
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-prompt '%SAt %p: Hit TAB for more, or the character to insert%s'
zstyle ':completion:*' max-errors 2
zstyle ':completion:*' menu select=long
zstyle ':completion:*' preserve-prefix '//[^/]##/'
zstyle ':completion:*' prompt 'da hast du %e fehler gemacht'
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*' special-dirs true
zstyle :compinstall filename '/home/shahn/.zshrc'

bindkey -e

bindkey "^[[3~" delete-char
bindkey "^[3;5~" delete-char
bindkey '^[[H' beginning-of-line
bindkey '^[[F' end-of-line

TERM=xterm-256color

autoload -Uz compinit
compinit

unsetopt BEEP AUTO_REMOVE_SLASH

autoload -U +X bashcompinit && bashcompinit
eval "$(stack --bash-completion-script stack)"

# make / a word separator
local WORDCHARS=${WORDCHARS//\//}

export EDITOR=$(which nvim)

export DARCS_ALWAYS_COLOR=1
export DARCS_DO_COLOR_LINES=1

export GPG_TTY=$(tty)

###########
# ALIASES #
###########

alias ls="ls --color -F"
alias l="ls -lh"
alias ll="ls -l"
alias lr="/bin/ls"

alias -g "\&"="&>/dev/null&|"
alias -g "<>"="2>&1 | tee gean"

alias qg='gitg --all \&'

alias view-dot='dot -Tpdf | okular - \&'
alias vd='dot -Tpdf | okular - \&'

alias xcopy='xclip -selection clipboard'

alias gdc='git diff --cached'
alias gma='git commit --amend'
alias gmas='git commit --amend --reuse-message HEAD'
alias gl='git log'
alias gtree='git log --oneline --graph --decorate --remotes --branches'
alias gprune-missing-on-remote="git branch -vv | ag gone | tr -s ' ' | cut -d' ' -f2 | xargs -n 1 -p git branch -D"

alias lp='nice -n 19'

alias zc='vim ~/.zshrc'

alias a='atom . -n \&'

alias yell="kdialog --msgbox 'YELL!!!'"

alias isrunning='pgrep -a'
alias mp='mplayer -af scaletempo -ao jack -volume 80'

export N_PREFIX=$HOME/.local
REPORTTIME=60

function htop-pgrep {
  local pattern="$1"
  local pids="$(pgrep -f "$pattern" | tr '\n' ',' | sed 's/.$//')"
  if [[ -n "$pids" ]]; then
    htop -p "$pids"
  else
    echo no process matching: "$pattern"
    return 1
  fi
}
